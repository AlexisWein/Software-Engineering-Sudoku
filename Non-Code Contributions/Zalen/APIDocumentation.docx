API Documentation:
 
SolvePuzzle(Puzzle, input):  
 
Description: Gets the current puzzle and checks if every new cell update is a valid entry and intermittently checks if the current board state is a solved puzzle
Parameters: The current puzzle object and the user input
Exceptions: The method is unable to get the current puzzle
Returns: The completed puzzle object
 
 
(Pseudocode) Example: 
 
C++:
 
function SolvePuzzle (Puzzle puzzle, int input ){
LoadPuzzle();
while (puzzle.checkIfFull() == false) {
 If (isdigit(input) == false) {
    cout << “Please enter a valid number from 0-9”;
    break;
} else {
         puzzle[0][2][2] = input;        // sample placing value
}
if ((isCorrect() == true) {
    return Puzzle;
    } else {
    cout << “Your board is incorrect. Consider asking for a hint or undoing some of your moves”’
   }
}
 
 
